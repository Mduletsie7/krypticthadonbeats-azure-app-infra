stages:
  - build
  - test
  - scan
  - deploy

workflow:
  rules:
    - if: '$CI_COMMIT_BRANCH == "develop"'
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main"'

variables:
  REGISTRY_URI: 865494649634.dkr.ecr.us-east-1.amazonaws.com
  REPO_NAME: krypticthadonbeats-dev
  IMAGE_TAG: $CI_COMMIT_SHA

image: ubuntu:latest

before_script:
  - apt-get update && apt-get install -y curl unzip
  - curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
  - unzip awscliv2.zip
  - ./aws/install
  - echo "Logging into ECR..."
  - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $REGISTRY_URI

build:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  script:
    - echo "Navigating to application frontend"
    - cd application/frontend
    - ls
    - echo "Building Docker image $REPO_NAME:$IMAGE_TAG"
    - docker build -t $REPO_NAME:$IMAGE_TAG .
    - docker tag $REPO_NAME:$IMAGE_TAG $REGISTRY_URI/$REPO_NAME:$IMAGE_TAG
    - echo "Pushing image to ECR"
    - docker push $REGISTRY_URI/$REPO_NAME:$IMAGE_TAG

container_scanning:
  stage: scan
  dependencies:
    - build
  script:
    - echo "Setting up Docker Scout"
    - curl -fsSL https://raw.githubusercontent.com/docker/scout-cli/main/install.sh -o install-scout.sh
    - sh install-scout.sh
    - echo "$DOCKER_SCOUT_TOKEN" | docker login -u "$DOCKER_HUB_USERNAME" --password-stdin
    - echo "Scanning image for CVEs"
    - docker scout cves $REGISTRY_URI/$REPO_NAME:$IMAGE_TAG > cves-report.txt
    - echo "Performing Docker Scout quickview (failing on critical issues)"
    - docker scout quickview $REGISTRY_URI/$REPO_NAME:$IMAGE_TAG
  artifacts:
    paths:
      - cves-report.txt
